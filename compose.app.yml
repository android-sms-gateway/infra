services:
  backend:
    image: ghcr.io/android-sms-gateway/server:latest
    environment:
      - TZ=${TIMEZONE:-UTC}
      - CONFIG_PATH=config.yml
      - HTTP__PROXIES=${HTTP__PROXIES}
      - DATABASE__HOST=${BACKEND__DATABASE__HOST}
      - DATABASE__USER=${BACKEND__DATABASE__USER}
      - DATABASE__PASSWORD=${BACKEND__DATABASE__PASSWORD}
      - DATABASE__DATABASE=${BACKEND__DATABASE__DATABASE}
      - DATABASE__TIMEZONE=${TIMEZONE:-UTC}
      - DATABASE__MAX_OPEN_CONNS=${BACKEND__DATABASE__MAX_OPEN_CONNS:-0}
      - DATABASE__MAX_IDLE_CONNS=${BACKEND__DATABASE__MAX_IDLE_CONNS:-0}
      - FCM__CREDENTIALS_JSON=${FCM__CREDENTIALS_JSON}
    configs:
      - source: backend_config-yml
        target: /app/config.yml
    networks:
      - internal
      - public
    deploy:
      labels:
        - "prometheus.enable=true"
        - "traefik.enable=true"
        
        - "traefik.http.middlewares.rate-limit_5-per-1m.ratelimit.average=5"
        - "traefik.http.middlewares.rate-limit_5-per-1m.ratelimit.period=1m"
        - "traefik.http.middlewares.rate-limit_5-per-1m.ratelimit.sourcecriterion.ipstrategy.depth=1"
        
        - "traefik.http.middlewares.backend-addprefix.addprefix.prefix=/api"
        
        - "traefik.http.routers.backend.entrypoints=https"
        - "traefik.http.routers.backend.middlewares=backend-addprefix"
        - "traefik.http.routers.backend.rule=Host(`api.${ROOT_DOMAIN}`)"
        - "traefik.http.routers.backend.tls.certresolver=le"

        - "traefik.http.routers.backend_limited.entrypoints=https"
        - "traefik.http.routers.backend_limited.middlewares=rate-limit_5-per-1m,backend-addprefix"
        - "traefik.http.routers.backend_limited.rule=Host(`api.${ROOT_DOMAIN}`) && PathPrefix(`/mobile/v1/device`) && Method(`POST`)"
        - "traefik.http.routers.backend_limited.tls.certresolver=le"
        
        - "traefik.http.routers.backend_limited-user.entrypoints=https"
        - "traefik.http.routers.backend_limited-user.middlewares=rate-limit_5-per-1m,backend-addprefix"
        - "traefik.http.routers.backend_limited-user.rule=Host(`api.${ROOT_DOMAIN}`) && PathPrefix(`/mobile/v1/user`)"
        - "traefik.http.routers.backend_limited-user.tls.certresolver=le"
        
        - "traefik.http.services.backend.loadbalancer.server.port=3000"
      replicas: 1
      resources:
        reservations:
          memory: 32M
        limits:
          memory: 64M
      restart_policy:
        condition: on-failure
        window: 15s
      update_config:
        order: start-first
        monitor: 15s
        failure_action: rollback
      rollback_config:
        order: start-first
        monitor: 15s
  ca-backend:
    image: ghcr.io/android-sms-gateway/ca-backend:latest
    environment:
      - TZ=${TIMEZONE:-UTC}
      - HTTP__ADDRESS=:3000
      - HTTP__PROXY_HEADER=${HTTP__PROXY_HEADER}
      - HTTP__PROXIES=${HTTP__PROXIES}
      - STORAGE__URL=redis://redis:6379/0
      - CSR__TTL=${CSR__TTL:-24h}
      - CSR__CA_CERT_PATH=${CSR__CA_CERT_PATH:-/run/secrets/ca.crt}
      - CSR__CA_KEY_PATH=${CSR__CA_KEY_PATH:-/run/secrets/ca.key}
    networks:
      - internal
      - public
    secrets:
      - ca.crt
      - ca.key
    deploy:
      labels:
        - "traefik.enable=true"

        - "traefik.http.routers.ca-backend.rule=Host(`ca.${ROOT_DOMAIN}`)"
        - "traefik.http.routers.ca-backend.entrypoints=https"
        - "traefik.http.routers.ca-backend.tls=true"
        
        - "traefik.http.routers.ca-backend_limited.rule=Host(`ca.${ROOT_DOMAIN}`) && Method(`POST`)"
        - "traefik.http.routers.ca-backend_limited.entrypoints=https"
        - "traefik.http.routers.ca-backend_limited.tls=true"
        - "traefik.http.routers.ca-backend_limited.middlewares=rate-limit_1-per-1m"
        
        - "traefik.http.middlewares.rate-limit_1-per-1m.ratelimit.average=1"
        - "traefik.http.middlewares.rate-limit_1-per-1m.ratelimit.period=1m"
        - "traefik.http.middlewares.rate-limit_1-per-1m.ratelimit.sourcecriterion.ipstrategy.depth=1"

        - "traefik.http.services.ca-backend.loadbalancer.server.port=3000"
      replicas: 1
      resources:
        reservations:
          memory: 32M
        limits:
          memory: 64M
      restart_policy:
        condition: on-failure
        window: 15s
      update_config:
        order: start-first
        monitor: 15s
        failure_action: rollback
      rollback_config:
        order: start-first
        monitor: 15s

configs:
  backend_config-yml:
    name: app_backend_config-yml_${STACK_VERSION:-0}
    file: backend/config.yml

secrets:
  ca.crt:
    name: root-ca.crt
    external: true
  ca.key:
    name: root-ca.key
    external: true
   
networks:
  internal:
    external: true
  public:
    external: true
